services:
  mysql:
    build:
      context: .
      dockerfile: ./mysql/Dockerfile
    image: mysql
    container_name: mysql_container
    networks:
      - db_network
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - db_volume:/var/lib/mysql
    ports:
      - "${MYSQL_PORT}:${MYSQL_PORT}"
    healthcheck:
      test: mysqladmin ping -u root -p${MYSQL_ROOT_PASSWORD}
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 5s

  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    image: app
    networks:
      - db_network
      - site_network
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      APP_PORT: ${APP_PORT}
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${APP_PORT}/health || (echo 'Healthcheck failed' && exit 1)"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 120s
    ports:
      - "${APP_PORT}:${APP_PORT}"

  nginx:
    image: nginx
    container_name: nginx_container
    ports:
      - "${NGINX_PORT}:80" # Map external port to internal port 80
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - site_network
    depends_on:
      app:
        condition: service_healthy

networks:
  db_network:
  site_network:
volumes:
  db_volume: